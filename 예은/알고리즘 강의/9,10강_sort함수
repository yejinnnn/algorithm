# algorithm
# sorted(정렬할 데이터)

# sorted(정렬할 데이터, reverse 파라미터)

# sorted(정렬할 데이터, key 파라미터)

# sorted(정렬할 데이터, key 파라미터, reverse 파라미터)

a = [4,6,37,2,7,9]
b=sorted(a)
c=sorted(a,reverse=True)

print(a)
print(b)
print(c)

d = dict()
d['a'] = 66
d['i'] = 20
d['e'] = 30
d['d'] = 33
d['f'] = 50
d['g'] = 60
d['c'] = 22
d['h'] = 80
d['b'] = 11
 
# 1. 딕셔너리 출력
print("\n1. 기본 딕셔너리")
print(d)
 
# 딕셔너리 키 정렬 오름차순(디폴트)
print("\n2. 키 정렬 sorted(d.items())")
f = sorted(d.items())
print(f)
 
# 딕셔너리 키 정렬 내림차순
print("\n3. 키 정렬 sorted(d.items(), reverse=True)")
g = sorted(d.items(), reverse=True)
print(g)
 
# 딕셔너리 키만 정렬 및 출력1
print("\n4. 키만 정렬 sorted(d.keys())")
h = sorted(d.keys())
print(h)
 
# 딕셔너리 키만 정렬 및 출력2
print("\n5. 키만 정렬 sorted(d)")
i = sorted(d)
print(i)


import operator
 
d = {'b': 400, 'f': 300, 'a': 200, 'd': 100, 'c': 500}
 
print('1. 원본 딕셔너리')
print(d.items())
 
 
print('\n2. 딕셔너리 정렬 : sorted(d.items())')
f = sorted(d.items())
print(f)
 
 
print('\n3. 딕셔너리 정렬 : sorted(d.items(), key=operator.itemgetter(1))')
g = sorted(d.items(), key=operator.itemgetter(1))
print(g)
 
 
print('\n4. 딕셔너리 정렬 : sorted(d.items(), key=operator.itemgetter(1), reverse=True)')
h = sorted(d.items(), key=operator.itemgetter(1), reverse=True)
print(h)
 
import operator
 
d = {'blockdmask': 400, 'equal': 300, 'apple': 200, 'dish': 100, 'cook': 500}
 
print('1. 원본 딕셔너리')
print(d.items())
 
 
print('\n2. 딕셔너리 정렬 : sorted(d.items())')
f = sorted(d.items())
print(f)
 
 
print('\n3. 딕셔너리 정렬 : sorted(d.items(), key=lambda x: x[1])')
g = sorted(d.items(), key=lambda x: x[1])
print(g)
 
 
print('\n4. 딕셔너리 정렬 : sorted(d.items(), key=lambda x: x[1], reverse=True)')
h = sorted(d.items(), key=lambda x: x[1], reverse=True)
print(h)


출처: https://blockdmask.tistory.com/466 [개발자 지망생]

